<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/assets/**" location="/assets/" />
	<context:property-placeholder location="classpath:db.properties" />
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<beans:bean id="multipartResolver"
    class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

    <!-- one of the properties available; the maximum file size in bytes -->
    <beans:property name="maxUploadSize" value="1000000"/>
	</beans:bean>
	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<beans:property name="driverClassName" value="${db.driver}" />
		<beans:property name="url"
			value="${db.host.url}" />
		<beans:property name="username" value="${db.user}" />
		<beans:property name="password" value="${db.password}" />
	</beans:bean>

	<!-- Hibernate 4 SessionFactory Bean definition -->
	<beans:bean id="hibernate4AnnotatedSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>com.chatbot.model.User</beans:value>
				<beans:value>com.chatbot.model.Product</beans:value>
				<beans:value>com.chatbot.model.ProductAttribute</beans:value>
				<beans:value>com.chatbot.model.ProductCategory</beans:value>
				<beans:value>com.chatbot.model.ProductImages</beans:value>
				<beans:value>com.chatbot.model.Orders</beans:value>
				<beans:value>com.chatbot.model.ProductOrdered</beans:value>
				<beans:value>com.chatbot.model.ProductQuantity</beans:value>
				<beans:value>com.chatbot.model.StockManagement</beans:value>
				<beans:value>com.chatbot.model.Agents</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">${db.hibernate.dialect}
				</beans:prop>
				
				<beans:prop key="hibernate.hbm2ddl.auto">${db.hibernate.hbm2ddl.auto}</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	
	<!-- UserDao and UserService bean definition -->
	<beans:bean id="userDao" class="com.chatbot.dao.UserDaoImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="userService" class="com.chatbot.service.UserServiceImpl">
		<beans:property name="userDao" ref="userDao"></beans:property>
	</beans:bean>
	
	<!-- ProductDao and ProductService Bean Definition -->
	<beans:bean id="productDao" class="com.chatbot.dao.ProductDaoImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="productService" class="com.chatbot.service.ProductServiceImpl" >
		<beans:property name="productDao" ref="productDao"></beans:property>
	</beans:bean>
	
	<!-- OrdertDao and OrderService Bean Definition -->
	<beans:bean id="orderDao" class="com.chatbot.dao.OrderDaoImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="orderService" class="com.chatbot.service.OrderServiceImpl" >
		<beans:property name="orderDao" ref="orderDao"></beans:property>
	</beans:bean>
	
	
	<!-- ApiDao and ApiService Bean Definition -->
	<beans:bean id="apiDao" class="com.chatbot.dao.ApiDaoImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="apiService" class="com.chatbot.service.ApiServiceImpl" >
		<beans:property name="apiDao" ref="apiDao"></beans:property>
	</beans:bean>
	
	<!-- AgentDao and AgentService Bean Definition -->
	<beans:bean id="agentDoa" class="com.chatbot.dao.AgentDaoImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="agentsService" class="com.chatbot.service.AgentsServiceImpl" >
		<beans:property name="agentDoa" ref="agentDoa"></beans:property>
	</beans:bean>
	
	<beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
    <!-- SMTP settings -->
   		<beans:property name="host" value="smtp.gmail.com" />
        <beans:property name="port" value="587"/>
        <beans:property name="username" value="sankalp.b@deeplogix.tech"/>
        <beans:property name="password" value="sankalp.b"/>
        <beans:property name="javaMailProperties">
            <beans:props>
                <beans:prop key="mail.transport.protocol">smtp</beans:prop>
                <beans:prop key="mail.smtp.auth">true</beans:prop>
                <beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
                <beans:prop key="mail.debug">true</beans:prop>
         	</beans:props>
        </beans:property>
	</beans:bean>
	<beans:bean id="emailSender" class="com.chatbot.util.EmailSender">
		<beans:property name="mailSender" ref="mailSender" />
	</beans:bean>
	
	<context:component-scan base-package="com.chatbot" />
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<beans:bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>

	
</beans:beans>
